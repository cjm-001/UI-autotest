#coding=utf-8
import os
from util.BrowserEngine import BrowserEngine
from Pages.TestPaperCreatePage import TestPaperCreatePage
from Pages.LoginPage import LoginPage
import unittest
from util.ExcelUtil import ExcelUtil
import ddt
import time

user_data_path = os.path.dirname(os.path.abspath('.')) + '\\data\\userinfo.xls'
sheet_with_login_vip_status = ExcelUtil(user_data_path, "lecture")
d_lec = sheet_with_login_vip_status.dict_data()


@ddt.ddt
class TestPaperCreateCase(unittest.TestCase):
    def setUp(self):
        browser = BrowserEngine(self)
        self.driver = browser.open_browser(self)

    def tearDown(self):
        for method_name,error in self._outcome.errors:
            if error:
                case_name=self._testMethodName
                file_path=os.path.join(os.path.dirname(os.path.abspath('.'))+'/screenshot/'+case_name+'.png')
                self.driver.save_screenshot(file_path)
        self.driver.close()
        print("讲师创建试卷case执行完成")

    @ddt.data(*d_lec)
    def testTestPaper_01_UploadSubjects(self, data):
        """验证讲师创建试卷-上传题目流程正确"""
        self.lg = LoginPage(self.driver)
        self.lg.Login_Account(data['username'], data['password'])
        self.tp = TestPaperCreatePage(self.driver)
        self.tp.click_coursedeploy()
        self.lg.current_handle_switch()
        self.lg.close_teach_notice_pop()
        self.tp.click_mylib()
        self.tp.click_testpaperlib()
        self.lg.current_handle_switch()
        self.lg.webdriverWait(10)
        time.sleep(2)
        #检查是否存在试卷脏数据
        self.tp.click_my_paper_tab_manage()
        self.lg.webdriverWait(10)
        test_paper_title = "这是测试试卷标题，请勿审核通过"
        self.tp.input_testpaper_title(test_paper_title)
        self.tp.click_search_button()
        self.tp.verify_nodata_exist()
        #新增试卷
        self.tp.click_addnewpaper()
        self.lg.webdriverWait(10)
        self.lg.current_handle_switch()
        #验证新增试卷页面可以打开
        try:
            assert u'新增试卷'==self.tp.get_add_paper_text()
            print("新增试卷页面可以打开")
        except Exception as e:
            print("新增试卷页面未能成功打开")
        time.sleep(1)
        #输入试卷基本信息（无通关要求-不限时长-所有人可访问）
        self.tp.click_testpaper_type1()
        self.tp.select_testpaper_type1()
        time.sleep(1)
        self.tp.click_testpaper_type2()
        self.tp.select_testpaper_type2()
        time.sleep(1)
        self.tp.input_knowpoint("这是测试试卷知识点")
        self.tp.input_papertitle(test_paper_title)
        self.tp.input_paper_des("这是测试试卷描述")
        self.tp.set_clearance_score_null()
        self.tp.set_label_item()
        self.tp.set_difficulty_easy()
        self.tp.click_save_button()
        self.lg.webdriverWait(10)
        #选择组卷方式--上传题目
        self.tp.click_upload_subject()
        time.sleep(1)
        self.lg.current_handle_switch()
        self.tp.click_paper_type1()
        self.tp.select_paper_type1()
        time.sleep(1)
        self.tp.click_paper_type2()
        self.tp.select_paper_type2()
        self.tp.click_chapter1()
        self.tp.select_chapter1()
        time.sleep(1)
        self.tp.select_chapter2()
        self.tp.input_knowledge_point("这是测试试卷知识点")
        #创建单选题
        self.tp.input_stem("这是一道测试单选题，请勿审核通过")
        self.tp.input_option1("这是选项1")
        self.tp.set_single_answer_ejs()
        self.tp.input_option2("这是选项2")
        self.tp.input_option3("这是选项3")
        self.tp.input_option4("这是选项4")
        self.tp.scroolbar_size()
        self.tp.input_analysis("这是答案解析")
        self.tp.click_label()
        self.tp.set_subject_difficulty()
        self.tp.click_add_new()
        time.sleep(2)
        #创建多选题
        self.tp.click_multiple_tab()
        self.tp.input_stem("这是一道测试多选题，请勿审核通过")
        self.tp.input_mulitle_option1("这是选项1")
        self.tp.input_mulitle_option2("这是选项2")
        self.tp.set_multiple_answer1_ejs()
        self.tp.set_multiple_answer2_ejs()
        self.tp.input_mulitle_option3("这是选项3")
        self.tp.input_mulitle_option4("这是选项4")
        self.tp.scroolbar_size()
        self.tp.input_analysis("这是答案解析")
        self.tp.click_add_new()
        time.sleep(2)
        #创建判断题
        self.tp.click_judge_tab()
        self.tp.input_stem( "这是一道测试判断题，请勿审核通过")
        self.tp.set_judge_answer_ejs()
        self.tp.scroolbar_size()
        self.tp.input_analysis("这是答案解析")
        self.tp.click_add_new()
        time.sleep(2)
        #创建填空题
        self.tp.click_completion_tab()
        self.tp.input_stem("这是一道测试填空题，请勿审核通过")
        self.tp.click_completion_number()
        self.tp.select_completion_number()
        self.tp.type_input1("测试填空题1")
        self.tp.type_input2("测试填空题2")
        self.tp.scroolbar_size()
        self.tp.input_analysis("这是答案解析")
        self.tp.click_add_new()
        time.sleep(2)
        #创建问答题
        self.tp.click_qa_tab()
        self.tp.input_stem("这是一道测试问答题，请勿审核通过")
        self.tp.input_answer("我是问答题答案")
        self.tp.scroolbar_size()
        self.tp.input_analysis("这是答案解析")
        self.tp.click_add_new()
        time.sleep(2)
        #创建编程题
        self.tp.click_code_tab()
        self.tp.input_stem("这是一道测试编程题，请勿审核通过")
        self.tp.input_answer("我是编程题答案")
        self.tp.scroolbar_size()
        self.tp.input_analysis("这是答案解析")
        time.sleep(2)
        #保存并提及审核
        self.tp.click_save_submit()
        #我的试卷页面
        self.lg.webdriverWait(10)
        time.sleep(2)
        self.tp.click_paper_status()
        self.tp.select_paper_status()
        self.tp.input_testpaper_title(test_paper_title)
        self.tp.click_search_button()
        time.sleep(2)
        #删除试卷
        self.tp.delete_testpaper()
        self.tp.confirm_delete()
        print("测试试卷删除了")
        time.sleep(2)
        #重新确认试卷是否被删除掉
        self.tp.input_testpaper_title(test_paper_title)
        self.tp.click_search_button()
        self.tp.verify_nodata_exist()
        #删除包含的试题
        self.tp.click_my_subject()
        self.tp.click_first_subject_delete()
        self.tp.confirm_delete()
        time.sleep(2)
        self.lg.webdriverWait(10)
        self.tp.click_first_subject_delete()
        self.tp.confirm_delete()
        time.sleep(2)
        self.lg.webdriverWait(10)
        self.tp.click_first_subject_delete()
        self.tp.confirm_delete()
        time.sleep(2)
        self.lg.webdriverWait(10)
        self.tp.click_first_subject_delete()
        self.tp.confirm_delete()
        time.sleep(2)
        self.lg.webdriverWait(10)
        self.tp.click_first_subject_delete()
        self.tp.confirm_delete()
        time.sleep(2)
        self.lg.webdriverWait(10)
        self.tp.click_first_subject_delete()
        self.tp.confirm_delete()
        time.sleep(2)
        print("试卷包含题目也都删除了")
        time.sleep(2)

    @ddt.data(*d_lec)
    def testTestPaper_02_SelectSubjects(self, data):
        """验证讲师创建试卷-手动选择题目流程正确"""
        self.lg = LoginPage(self.driver)
        self.lg.Login_Account(data['username'], data['password'])
        self.tp = TestPaperCreatePage(self.driver)
        self.tp.click_coursedeploy()
        self.lg.current_handle_switch()
        self.lg.close_teach_notice_pop()
        self.tp.click_mylib()
        self.tp.click_testpaperlib()
        self.lg.current_handle_switch()
        self.lg.webdriverWait(10)
        # 检查是否存在试卷脏数据
        self.tp.click_my_paper_tab_manage()
        self.lg.webdriverWait(10)
        self.lg.current_handle_switch()
        test_paper_title_two = "这是第二道测试试卷标题，请勿审核通过"
        self.lg.webdriverWait(10)
        self.tp.input_testpaper_title(test_paper_title_two)
        self.tp.click_search_button()
        self.tp.verify_nodata_exist()
        # 新增试卷
        time.sleep(2)
        self.tp.click_my_subject()
        self.tp.click_add_subject()
        #self.tp.click_addnewpaper()
        self.lg.current_handle_switch()
        self.lg.webdriverWait(10)
        self.tp.click_paper_type1()
        self.tp.select_paper_type1()
        time.sleep(1)
        self.tp.click_paper_type2()
        self.tp.select_paper_type2()
        self.tp.click_chapter1()
        self.tp.select_chapter1()
        time.sleep(1)
        self.tp.select_chapter2()
        self.tp.input_knowledge_point("这是第二个测试试卷知识点")
        # 创建单选题
        self.tp.input_stem("这是第二道测试单选题，请勿审核通过")
        self.tp.input_option1("这是选项1")
        self.tp.set_single_answer_ejs()
        self.tp.input_option2("这是选项2")
        self.tp.input_option3("这是选项3")
        self.tp.input_option4("这是选项4")
        self.tp.scroolbar_size()
        self.tp.input_analysis("这是答案解析")
        self.tp.click_label()
        self.tp.set_subject_difficulty()
        self.tp.click_submit_subject()
        time.sleep(2)
        # 创建多选题
        self.tp.click_multiple_tab()
        self.tp.input_stem("这是第二道测试多选题，请勿审核通过")
        self.tp.input_mulitle_option1("这是选项1")
        self.tp.input_mulitle_option2("这是选项2")
        self.tp.set_multiple_answer1_ejs()
        self.tp.set_multiple_answer2_ejs()
        self.tp.input_mulitle_option3("这是选项3")
        self.tp.input_mulitle_option4("这是选项4")
        self.tp.scroolbar_size()
        self.tp.input_analysis("这是答案解析")
        self.tp.click_submit_subject()
        time.sleep(2)
        # 创建判断题
        self.tp.click_judge_tab()
        self.tp.input_stem("这是第二道测试判断题，请勿审核通过")
        self.tp.set_judge_answer_ejs()
        self.tp.scroolbar_size()
        self.tp.input_analysis("这是答案解析")
        self.tp.click_submit_audit()
        time.sleep(2)
        self.tp.click_my_paper_tab()
        time.sleep(2)
        self.tp.click_addnewpaper()
        self.lg.current_handle_switch()
        self.lg.webdriverWait(10)
        # 验证新增试卷页面可以打开
        try:
            assert u'新增试卷' == self.tp.get_add_paper_text()
            print("新增试卷页面可以打开")
        except Exception as e:
            print("新增试卷页面未能成功打开")
        time.sleep(1)
        # 输入试卷基本信息（无通关要求-不限时长-所有人可访问）
        self.tp.click_testpaper_type1()
        self.tp.select_testpaper_type1()
        time.sleep(1)
        self.tp.click_testpaper_type2()
        self.tp.select_testpaper_type2()
        time.sleep(1)
        self.tp.input_knowpoint("这是第二道测试试卷知识点")
        self.tp.input_papertitle(test_paper_title_two)
        self.tp.input_paper_des("这是第二道测试试卷描述")
        self.tp.set_clearance_score_null()
        self.tp.set_label_item()
        self.tp.set_difficulty_easy()
        self.tp.click_save_button()
        self.lg.webdriverWait(10)
        # 选择组卷方式--手动选择题目
        self.tp.click_select_bymanual()
        time.sleep(1)
        self.lg.current_handle_switch()
        self.tp.add_first_subject_js()
        time.sleep(2)
        self.tp.add_second_subject_js()
        time.sleep(2)
        self.tp.add_third_subject_js()
        time.sleep(2)
        self.tp.click_submit_paper()
        time.sleep(2)
        # 我的试卷页面
        time.sleep(2)
        self.tp.click_paper_status()
        self.tp.select_paper_status()
        self.tp.input_testpaper_title(test_paper_title_two)
        self.tp.click_search_button()
        time.sleep(2)
        # 删除试卷
        self.tp.delete_testpaper()
        self.tp.confirm_delete()
        print("第二道测试试卷删除了")
        time.sleep(2)
        # 删除包含的试题
        self.tp.click_my_subject()
        self.tp.click_first_subject_delete()
        self.tp.confirm_delete()
        time.sleep(2)
        self.lg.webdriverWait(10)
        self.tp.click_first_subject_delete()
        self.tp.confirm_delete()
        time.sleep(2)
        self.lg.webdriverWait(10)
        self.tp.click_first_subject_delete()
        self.tp.confirm_delete()
        time.sleep(2)
        print("第二道试卷包含题目也都删除了")
        time.sleep(2)

    if __name__ == '__main__':
        unittest.main()

